package com.company.Practise;

import java.util.Random;
import java.util.Scanner;

public class HangmanGame {

    public static Random random = new Random();//function prototype
    private static char[] wordFound;
    private String wordConnect;
    //word bank
    //public char[] wordFound;
    //public static printMan;
    //public static winCheck;
    private static String wordList(String word)
    {
        String[] arr = {"rice", "town", "frighten", "greatly", "rubbed", "balance",
                "hard", "held", "atmosphere", "game", "sun", "desk",
                "president", "corn", "wise", "sky", "rocket", "save",
                "badly", "doctor", "drive", "origin", "nails", "weight",
                "sets", "progress", "simply", "difficult", "flat", "century",
                "suggest", "yourself", "atom", "loud", "tree", "twelve",
                "highest", "silent", "slabs", "date", "leather", "satisfied"};
        Random rand = new Random();
        return word = arr[rand.nextInt(arr.length)];
    }

    public String grabWord() {
        String word = "";
        String randomWord = wordList(word);

        //??
        wordFound = new char[randomWord.length()];
        char[] ch = new char[randomWord.length()];
        for (int i = 0; i < randomWord.length(); i++) {
            ch[i] = '?';
        }

        randomWord.split("(?!^)");
        for (int i = 0; i < wordFound.length; i++) {
            wordFound[i] = '_';
        }
        return randomWord;
    }
//    public String wordToGuess();

    public boolean wordFound(){
        return wordConnect.contentEquals(new String(wordFound));
    }
    public void printMan() {

    }
    public static void winCheck(String[] fullWord) {
        for (int x=0; x < fullWord.length; x++)
            if (x == fullWord.length - 1){
                System.out.println("You Win!");
            }
    }

    public static int guess(String letter, String word, int errors) {
        if  (letter == null) {
            System.out.println("String was empty");
            printMenu();
        }
        if (word.contains(letter)) {
            //??
            int wordIndex = word.indexOf(letter);//gets number for word index
            while (wordIndex >= 0) {
                wordFound[wordIndex] = letter.charAt(0);//places number in arrays index
                wordIndex = word.indexOf(letter, wordIndex + 1);
            }
            //replaceLetter(letter, []word);
            System.out.println("The letter " + letter + " was found in the word!");
            System.out.println(wordFound);
            printMan(errors);
            //winCheck(wordFound);
        } else {
            System.out.println("The letter " + letter + " is not in the word.");
            errors++;
            printMan(errors);
        }
        return errors;
    }

    private void printStatus(int countGuesses, String letter) {
        if (countGuesses == 0) {
            System.out.println("You have not made any guesses yet.");
        } else {
            System.out.println("You have made " + countGuesses + " guesses.");
        }
        System.out.println(letter);
    }

    public static void printMenu() {
        System.out.println(" * menu *");
        System.out.println("quit   - quits the game");
        System.out.println("status  - prints the game status");
        System.out.println("a single letter uses the letter as a guess");
        System.out.println("an empty line prints this menu");
    }

    public boolean gameOn() {
        return true;
    }

    public static void printMan(int wrongGuess) {
        System.out.println(" _____");
        System.out.println("|     I");

        if (wrongGuess >= 1 && wrongGuess <5) {
            System.out.print("|   (u_u)\n");
        } else if (wrongGuess >= 5 && wrongGuess <=6) {
            System.out.print("|   (o_o)\n");
        } else if (wrongGuess == 7) {
            System.out.print("|   (x_x)\n");
        }
        if (wrongGuess < 2) {
            System.out.println("|");
        } else if (wrongGuess == 2) {
            System.out.print("|     |\n");
        } else if (wrongGuess >= 3) {
                System.out.println("|    /|\\");
            }

        if (wrongGuess < 3) {
            System.out.println("|");
        }
        if (wrongGuess < 4) {
            System.out.println("|");
        } else if (wrongGuess >= 4) {
            System.out.print("|     |\n");
        }
        if (wrongGuess < 5) {
            System.out.println("|");
        } else if (wrongGuess >= 5) {
            System.out.print("|     |\n");
        }
        if (wrongGuess < 6) {
            System.out.println("|");
        } else if (wrongGuess >= 6) {
            System.out.println("|    / \\");
        }
        System.out.println("|");
        System.out.println("â”´");
        //return wrongGuess;
    }

    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        HangmanGame hangman = new HangmanGame();

        System.out.println("************");
        System.out.println("* Hangman *");
        System.out.println("************");
        System.out.println("");
        printMenu();
        System.out.println("");

        //word to get from word bank
        String getWord = hangman.grabWord();

        //hangman.wordToGuess();
        int errors = 0, guesses = 0;
        String alphabet = new String ("abcdefghijklmnopqrstuvxyz");

        //loop to call functions
        while (hangman.gameOn() && errors < 7) {
            System.out.println("Type a command:");
            String command = reader.nextLine();
            alphabet = alphabet.replace(command, "");

            if (command.equals("status")) {
                hangman.printStatus(guesses, alphabet);
            }
            if (command.equals("quit")) {
                System.out.println("Thanks for playing");
            }
            if (command.length() == 1) {  // command has only one letter, so it must be a guess
               errors = hangman.guess(command, getWord, errors);
            }
            if (command.length() == 1) {
                //int returnErrors = hangman.printMan(errors);
            }

            guesses++;
        }
        System.out.println("The word was " + getWord + "!");
        System.out.println("game over!");
        reader.close();
    }
}
