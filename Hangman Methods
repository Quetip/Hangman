package com.company.Practise;
//7 guesses
//random word bank of at least 100 words
//of course printed hangman
import java.util.Random;
import java.util.Scanner;
import java.util.Arrays;

class Hangman {
    int guess = 0;
    String guessLetter;
    boolean gameOn() {
        guess += 1;
        return true;
    }
    public static char[] removeLetter(char[] letter, int index) {
        if (letter == null || index < 0 || index >= letter.length) {
            return letter;
        }
        char[] anotherArray = new char[letter.length - 1];
        for (int i = 0, k = 0; i < letter.length; i++){
                if (i == index) {
                    continue;
                }
            anotherArray[k++] = letter[i];
        }
        return anotherArray;
    }
    //get user inputs into an array
    //cross check with unused letters
    //remove unused letters
    //prints remaining letters to be used again

    public static char[] storeLetters(String letter) {
        if (letter.length() == 1) {
            System.out.println("Unused letters:");
            String[] alphabet = {"abcdefghijklmnopqrstuvwxyz"};
            //removing a letter from the array
            char[] unusedLetters = {'a', 'b', 'c'};
            System.out.println("Alphabet: " + Arrays.toString(unusedLetters));

            //get letter to remove from alphabet
            char c = letter.charAt(0);
            int index = Character.getNumericValue(c);
            index = index - 10;
            System.out.println("index to be removed: " + index);
            //call to remove letter from alphabet
            unusedLetters = removeLetter(unusedLetters, index);

            System.out.println("Resultant Array: " + Arrays.toString(unusedLetters));
            System.out.println();
            System.out.println("***************");
            return unusedLetters;
        }
        //store letters in an array
        //char[] storedUserInputs = letter.length();//array initialization
        char[] n = {};
        for (int i = 0; i < letter.length(); i++) {

            n = new char[letter.length()];

            System.out.println(n);

        }
        return n;
    }

    public void printStatus(String command) {

        //put commands through the alphabet
        //get updated array

        System.out.println("**************");
        if (guess == 0) {

            System.out.println("You have not made any guesses yet.");
        } else {
            System.out.println("You have made " + guess + " guesses");
        }

//assigns a number to a letter: codeLetter = (char) ('A' + remainder)
        //letters to use

    }

    public void guess(String command) {

//        String t = "?", e = "?", s = "?";
//        String word = t + e + s + t;
////        int i = 0;
//
//        if (command.contains("t")) {
//            word = word.replace("?", "t"); //replace letters with '?'
//        }
//        if (command.equals("e")) {
//            e = command.replace("?", command); //replace letters with '?'
//        }
//        System.out.println(word);
//        System.out.println("the letter " + command + " is not in the word.");
    }

    public void printMan() {
        System.out.println(" _____");
        System.out.print(" |");
        System.out.println();
        System.out.println(" |");
        System.out.println(" |");
        System.out.println(" |");
        System.out.println("/|\\");
    }

    public void printWord(String command) {
    }

        public void Word() {

            Random randomWordSelector = new Random();


            final String[] word = new String[]{"test", "rest", "chest"}; //array
            int i = randomWordSelector.nextInt(word.length); //select a word in the array


            word[i] = word[i].replaceAll(".",  "?"); //replace letters with '?'
            //matching a letter in a string

            for (char ch : word[i].toCharArray()) {
                System.out.print(ch);
//        Scanner keyboard = new Scanner(System.in);
//        String word = keyboard.nextLine();
//        int i = 0;
//        if () {
//            i++;

            }
        }
    }

